// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MysterySantaBot.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MysterySantaBot.Database.Migrations
{
    [DbContext(typeof(SantaBotDbContext))]
    [Migration("20231121195215_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MysterySantaBot.Database.Entities.ShowHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор сущности.");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasComment("Дата и время создания сущности в БД.");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at")
                        .HasComment("Дата и время удаления сущности в БД.");

                    b.Property<DateTime>("LastShown")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_shown");

                    b.Property<long>("ShownUserTelegramId")
                        .HasColumnType("bigint")
                        .HasColumnName("shown_user_telegram_id");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasComment("Дата и время последнего обновления сущности в БД.");

                    b.Property<long>("UserTelegramId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_telegram_id");

                    b.HasKey("Id")
                        .HasName("pk_show_history");

                    b.ToTable("show_history", "app");
                });

            modelBuilder.Entity("MysterySantaBot.Database.Entities.UserChoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор сущности.");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ChosenUserTelegramId")
                        .HasColumnType("bigint")
                        .HasColumnName("chosen_user_telegram_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasComment("Дата и время создания сущности в БД.");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at")
                        .HasComment("Дата и время удаления сущности в БД.");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasComment("Дата и время последнего обновления сущности в БД.");

                    b.Property<long>("UserTelegramId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_telegram_id");

                    b.HasKey("Id")
                        .HasName("pk_user_choice");

                    b.ToTable("user_choice", "app");
                });

            modelBuilder.Entity("MysterySantaBot.Database.Entities.UserForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Идентификатор сущности.");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<int?>("ChosenByOthersCount")
                        .HasColumnType("integer")
                        .HasColumnName("chosen_by_others_count");

                    b.Property<string>("Contact")
                        .HasColumnType("text")
                        .HasColumnName("contact");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasComment("Дата и время создания сущности в БД.");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at")
                        .HasComment("Дата и время удаления сущности в БД.");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("boolean")
                        .HasColumnName("is_hidden");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Photo")
                        .HasColumnType("text")
                        .HasColumnName("photo");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasComment("Дата и время последнего обновления сущности в БД.");

                    b.Property<long>("UserTelegramId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_telegram_id");

                    b.HasKey("Id")
                        .HasName("pk_user_form");

                    b.ToTable("user_form", "app");
                });
#pragma warning restore 612, 618
        }
    }
}
